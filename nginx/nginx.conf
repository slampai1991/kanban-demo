events {
  worker_connections 1024;
}

http {
  resolver 127.0.0.11 valid=10s;  # Docker DNS
  
  upstream backend {
    server backend:8080;
  }

  upstream frontend {
    server frontend1:80;
    server frontend2:80;
  }

  server {
    listen 80;
    server_name app.local;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name app.local;

    ssl_certificate /etc/nginx/ssl/app.local.crt;
    ssl_certificate_key /etc/nginx/ssl/app.local.key;
   
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    
    location / {
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
      proxy_pass http://backend/api/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /monitor/prometheus/ {
      proxy_pass http://prometheus/;
    }

    location /monitor/loki/ {
      proxy_pass http://loki/;
    }

    location /monitor/grafana/ {
      proxy_pass http://grafana/;
    }
  }
}
