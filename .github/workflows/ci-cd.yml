name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Backend tests
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
      - run: mvn -B test -f kanban-backend/pom.xml
      - name: Frontend tests
        uses: actions/setup-node@v4
        with:
          node-version: 14
      - run: |
          cd kanban-frontend
          npm ci
          npm run test --if-present || true
          npm run lint --if-present || true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare .env
        run: |
          echo "POSTGRES_DB=${POSTGRES_DB}" > .env
          echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

      - name: Copy project to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT || '22' }}
          source: "."
          target: "/home/${{ secrets.DEPLOY_USER }}/kanban-app"

      - name: Build and run on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT || '22' }}
          script: |
            cd /home/${{ secrets.DEPLOY_USER }}/kanban-app
            docker compose pull || true
            docker compose up -d --build --remove-orphans
