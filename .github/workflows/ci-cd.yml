name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${GH_USER}/kanban-backend
  IMAGE_FRONTEND: ghcr.io/${GH_USER}/kanban-frontend
  IMAGE_NGINX: ghcr.io/${GH_USER}/kanban-nginx

jobs:
  # test-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Java 8
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'temurin'
  #         java-version: 8
  #     - name: Run Maven tests
  #       run: mvn -B test -f kanban-backend/pom.xml
  #     - name: Run Maven integration tests
  #       run: mvn -B verify -f kanban-backend/pom.xml

  # test-frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18
  #     - name: Install dependencies
  #       run: cd kanban-frontend && npm ci
  #     - name: Lint frontend
  #       run: cd kanban-frontend && npm run lint
  #     - name: Run unit tests
  #       run: cd kanban-frontend && npm run test -- --watch=false --browsers=ChromeHeadless
  #     - name: Run e2e tests
  #       run: cd kanban-frontend && npm run e2e -- --webdriver-update=false

  build-and-push:
    runs-on: ubuntu-latest
    # needs: [test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v4

      # Логин в GHCR
      - name: Login to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      # Сборка и пуш backend
      - name: Build backend image
        run: |
          docker build -t ${{ env.IMAGE_BACKEND }}:latest ./kanban-backend
          docker push ${{ env.IMAGE_BACKEND }}:latest

      # Сборка и пуш frontend
      - name: Build frontend image
        run: |
          docker build -t ${{ env.IMAGE_FRONTEND }}:latest ./kanban-frontend
          docker push ${{ env.IMAGE_FRONTEND }}:latest

      # Сборка и пуш nginx
      - name: Build nginx image
        run: |
          docker build -t ${{ env.IMAGE_NGINX }}:latest -f ./kanban-frontend/Dockerfile ./kanban-frontend
          docker push ${{ env.IMAGE_NGINX }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy on remote server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          script: |
            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            cd /home/${{ secrets.DEPLOY_USER }}/kanban-app
            docker compose pull
            docker compose up -d --remove-orphans
