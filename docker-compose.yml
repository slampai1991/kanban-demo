services:
  kanban-postgres:
    image: postgres:12
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - kanban-net

  backend:
    build: ./kanban-backend
    image: ghcr.io/${GH_USER}/kanban-demo-backend:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://kanban-postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8081:8080"
    depends_on:
      - kanban-postgres
    networks:
      - kanban-net

  frontend1:
    build: ./kanban-frontend
    image: ghcr.io/${GH_USER}/kanban-demo-frontend:latest
    networks:
      - kanban-net

  frontend2:
    build: ./kanban-frontend
    image: ghcr.io/${GH_USER}/kanban-demo-frontend:latest
    networks:
      - kanban-net

  nginx:
    image: ghcr.io/${GH_USER}/kanban-demo-nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend1
      - frontend2
    networks:
      - kanban-net
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - kanban-net

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - kanban-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    networks:
      - kanban-net

volumes:
  db-data:

networks:
  kanban-net:
    driver: bridge
